# Configure freeswitch for NAT tranversal, including AWS side, STUN and client side.
# https://github.com/eliassun/WebRTC automatea a part of the process below.
# For coturn, it will turn on the STUN only for FreeSWITCH. But at the end of this log will still show to how turn on the TURN service. 

# Configure SIP for the SIP Register
# Change demo example default_password. It can get a random pwd by apt-get install uuid-runtime, then run uuidgen to get a unique string
vim /usr/local/freeswitch/conf/vars.xml 
 <X-PRE-PROCESS cmd="set" data="default_password=123"/>
# optional fsctl shutdown
sudo systemctl restart freeswitch.service

# SIP Register for the clients, such as Linphone and PJSIP
# Linphone iOS: SIP Account: user 1002, password 123, domain server_ip_address
# Linphhone MacOS: SIP Account: user 1001, sip address: "1001" <sip:1001@server_ip_address>, SIP Server address  <sip:server_ip_address>
# PJSIP MacOS: It needs to download the PJSIP source code, then compile it. The result is at pjsip-apps/bin/pjsua-x86_64-apple-darwinxx. This is a good debug tool as it can print the SIP message in the terminal. In the terminal, input +a to add a SIP account, then configure something like 

User: sip:1001@ec2_public_ip, Registra: sip:ec2_public_ip

# RTP for AWS EC2
# Read https://freeswitch.org/confluence/spaces/flyingpdf/pdfpageexport.action?pageId=3965076
# The vars.xml has "set", "stun-set" or "exec-set". When it uses the "curl", then it is "exec-set". The server to get a public IP, I perfer http://checkip.amazonaws.com.
# Then check and modify the files below:
sudo vim /usr/local/freeswitch/conf/vars.xml
sudo vim /usr/local/freeswitch/conf/autoload_configs/verto.conf.xml
sudo vim /usr/local/freeswitch/conf/sip_profiles/internal.xml
sudo vim /usr/local/freeswitch/conf/sip_profiles/external.xml
sudo vim /usr/local/freeswitch/conf/autoload_configs/switch.conf.xml
sudo systemctl restart freeswitch.service
sudo systemctl status freeswitch.service
# https://github.com/eliassun/WebRTC has the samples files above.


# debug in fs cli
sudo /usr/local/freeswitch/bin/fs_cli -r
#In fs_cli
sofia status profile internal  

# Config a STUN/TURN server
sudo apt-get install coturn
sudo cp /etc/turnserver.conf /etc/turnserver.conf.backup
sudo vim /etc/turnserver.conf
systemctl start coturn
sudo systemctl start coturn
sudo systemctl status coturn
# Check ports listening and config them into SG
sudo lsof -n -P -i|grep UDP
# Add STUN server into the the client settings.


# Debug by tcpdump
sudo tcpdump -i eth0 host 192.168.10.3 and port 5060 -n -s 0 -vvv  # -w /usr/src/dump
sudo tcpdump -i eth0 host 192.168.10.3 and portrange 10000-50000 -n -s 0 -vvv  # -w /usr/src/dump
sudo tcpdump -i eth0 host 100.90.4.9  and portrange 500-55000 and proto \\udp
sudo tcpdump -i eth0 port not 22 and port not 53 -w /home/ubuntu/dump.pcap



... (three consecutive points)  - exit fs_cli. If used from console it shutdown FreeSWITCH

ctrl-d  - exit fs_cli

fsctl shutdown - shutdown FreeSWITCH

hupall  - hangup all calls

fsctl loglevel [0-7] - change which log messages are visualized

status  - tells some basic statistics

version - which code base

show channels - visualize all call legs one by one, individually

show calls - visualize all call legs grouped by complete bridged calls (A+B)

help

# Optional, turn on the coturn TURN
sudo vim /etc/turnserver.conf
# begin
listening-ip=0.0.0.0
external-ip=Public IP Address
syslog
realm= domain name or IP(e.g. wwww.my_domain.com)
server-name= hostname(e.g. ip-172-17-1-100)
min-port=16383
max-port=32769
fingerprint
verbose
user=test:test123
lt-cred-mech
# end

sudo systemctl restart coturn
sudo systemctl status coturn
# Check the setting on https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/
# The results should show:
# turn:3.18.171.201:3478?transport=udp	
# stun:3.18.171.201:3478	


