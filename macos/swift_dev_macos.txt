1. Folder permission
* The output file should be in the correct path, e.g.
com.apple.security.files.downloads.read-write  :  store the file downloaded from Internet, not for the local writing
com.apple.security.assets.pictures.read-write  :  write the image from the local

2. Link dylib
* Build Phase : Link binary with lib, then General --> Framework, lib : Embeded and Sign

3. C call Swift
* Swift
Keyword: @_cdecl
e.g.
@_cdecl("updateMainThread")
public func updateMainThread(code: UInt64, info:  UnsafePointer<UInt8>, size: UInt64) {
    let str = String(cString: info)
}

* C
extern "C" void updateMainThread(uint64_t code, uint8_t *info, uint64_t size);


4. Swift call C
* Swift --> brdige -- > Objective-C --> C/C++
e.g. 
Swift  : DadEye().getscreen()

* Bridge : dadeye-Bridging-Header.h
#import "dadeyewrapper.h"

* Objective-C : "dadeyewrapper.h"
#import <Foundation/Foundation.h>
@interface DadEye : NSObject
- (void) getscreen;
@end

* Objective-C : "dadeyecbridge.mm"
#import "dadeyewrapper.h"
#import "main.hpp"
@implementation DadEye
- (void) getscreen {
    DadEyeWrapper().getscreen([[self picpath] cStringUsingEncoding:NSUTF8StringEncoding]);
}
@end

* C/C++ main.hpp

class DadEyeWrapper {
public:
    void getscreen(const char* path);
};

* C/C++ main.cpp
void DadEyeWrapper::getscreen(const char* path) {}

5. Update UI outside View

Key: If possible, update all UI elements at one time, and try to avoid the often update.

View components(Text, Button) -->  ViewModel : ObservableObject ----> func outside of view
e.g.
* View
    @StateObject
    private var deVM: DadEyeViewModel = .shared
    var body: some View {
            HStack{
                Text(deVM.myID.description).frame(maxWidth: .infinity, alignment: .leading)
            }
    }
 
 * ViewMode
 
 final class DadEyeViewModel: ObservableObject {
    static let shared: DadEyeViewModel = .init()
    @Published
    private (set) var myID: String = "xxxx"
    @Published
    func updateInfo(for value: String) {
        Task { @MainActor in
            myID = value
        }
    }
 }

* func outside of view

DadEyeViewModel.shared.updateInfo(for : "info") 

# Some discussion about the sandbox permission:
https://walkginkgo.com/ffmpeg/2018/07/15/MAS-sanbox.html




