# set up ipsec based on strongSwan, including the PSK and PKI authentication
# https://github.com/eliassun/ipsec has the source code to automate the setup, which has much more security of file permssion and network setup.
# section 1 and 2 are for the direct connections. section 3 are for the IP address behind NAT, such as hosts in AWS VPC. 

mkdir ipsec
cd ipsec
sudo apt-get update && sudo apt-get upgrade -y
sudo apt install strongswan strongswan-pki libcharon-extra-plugins libcharon-extauth-plugins libstrongswan-extra-plugins libtss2-tcti-tabrmd0 -y
sudo chmod 755 /etc/ipsec.d/private
sudo ipsec pki --gen --size 4096 --type rsa --outform pem > ca.key.pem
sudo cp ca.key.pem /etc/ipsec.d/private/ca.key.pem
sudo chmod 755 /etc/ipsec.d/private
ipsec pki --self --in /etc/ipsec.d/private/ca.key.pem --type rsa --dn "CN=blue@elias" --ca --lifetime 3650 --outform pem ca.cert.pem > ca.cert.pem
sudo cp ./ca.cert.pem /etc/ipsec.d/cacerts/
ipsec pki --gen --size 4096 --type rsa --outform pem > server.key.pem
sudo cp ./server.key.pem  /etc/ipsec.d/private/server.key.pem

# change ip-172-16-1-100 to the host's name

ipsec pki --pub --in /etc/ipsec.d/private/server.key.pem --type rsa | ipsec pki --issue --lifetime 3650 --cacert /etc/ipsec.d/cacerts/ca.cert.pem --cakey /etc/ipsec.d/private/ca.key.pem --dn "CN=<ip-172-16-1-100>" --san="<ip-172-16-1-100>" --flag serverAuth --flag ikeIntermediate --outform pem > server.cert.pem
sudo cp server.cert.pem /etc/ipsec.d/certs/server.cert.pem

sudo vim /etc/sysctl.conf
#text start
net.ipv4.ip_forward=1
net.ipv6.conf.all.forwarding=1
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
#text end

sysctl -p

*** PSK ***
#configure Transport mode + PSK. If it needs the tunnel mode, then change "type=transport" to "type=tunnel" below
sudo vim /etc/ipsec.conf

#text start
config setup
        charondebug="all"
        strictcrlpolicy=no
        uniqueids=yes
        cachecrls=no

conn red-to-blue
        authby=secret
        auto=route
        keyexchange=ikev2
        ike=aes256-sha256-modp1024!
        left=192.168.10.11
        right=192.168.10.12
        type=transport
        mark=42
        esp=aes256-sha256!
#text end
#Optionally, set forceencaps=yes if it needs to force ESP UDP encapsulation even if a NAT is not detected. 

#configure pre-shared key
sudo vim /etc/ipsec.secrets

#text begin
192.168.10.11 : PSK "v+NkxY9LLZvwj4qCC2o/gGrWDF2d21jL" 
#text end

# repeat sudo vim /etc/ipsec.conf for another box


sudo ipsec restart
sudo ipsec up red-to-blue

# check the status
sudo ipsec statusall

*** PKI ***

# create certs in the server1
cd ~/ipsec
ipsec pki --gen --type rsa --size 4096 --outform pem > strongswankey.pem
sudo cp strongswankey.pem /etc/ipsec.d/private/strongswankey.pem 
ipsec pki --self --ca --lifetime 3650 --in /etc/ipsec.d/private/strongswankey.pem --type rsa --dn "c=CH, O=strongSwan, CN=Root CA" --outform pem > strongswancert.pem
sudo cp strongswancert.pem /etc/ipsec.d/cacerts/strongswancert.pem

# another server
# copy  /etc/ipsec.d/cacerts/strongswancert.pem from the server 1 to this 2nd server
# copy  /etc/ipsec.d/private/strongswankey.pem  from the server 1 to this 2nd server

# go back to the 1st server to sign the server cert
ipsec pki --gen --type rsa --size 2048 --outform pem > bluekey.pem
sudo cp bluekey.pem /etc/ipsec.d/private/bluekey.pem
sudo chmod 755 /etc/ipsec.d/private/bluekey.pem
ipsec pki --pub --in /etc/ipsec.d/private/bluekey.pem  --type rsa| ipsec pki --issue --lifetime 730 --cacert /etc/ipsec.d/cacerts/strongswancert.pem  --cakey /etc/ipsec.d/private/strongswankey.pem --dn "C=CH O=strongSwan, CN=blue" --san blue --flag serverAuth --flag ikeIntermediate --outform pem > clientbluecert.pem
sudo cp clientbluecert.pem /etc/ipsec.d/certs/clientbluecert.pem

# go to the 2nd server to sign another server cert
cd /etc/ipsec
ipsec pki --gen --type rsa --size 2048 --outform pem > redkey.pem
sudo cp redkey.pem /etc/ipsec.d/private/redkey.pem
sudo chmod 755 /etc/ipsec.d/private/redkey.pem
ipsec pki --pub --in /etc/ipsec.d/private/redkey.pem  --type rsa| ipsec pki --issue --lifetime 730 --cacert /etc/ipsec.d/cacerts/strongswancert.pem  --cakey /etc/ipsec.d/private/strongswankey.pem --dn "C=CH O=strongSwan, CN=red" --san blue --flag serverAuth --flag ikeIntermediate --outform pem > clientredcert.pem
sudo cp clientredcert.pem /etc/ipsec.d/certs/clientredcert.pem

sudo vim /etc/ipsec.conf

#text begin

config setup
        charondebug="all"
        strictcrlpolicy=no
        uniqueids=yes
        cachecrls=no

conn red-to-blue
        auto=start
        keyexchange=ikev2
        ike=aes256-sha256-modp1024!
        left=192.168.10.11
        right=192.168.10.12
        type=tunnel
        mark=42
        esp=aes256-sha256!
        leftcert=clientredcert.pem
        leftid="C=CH O=strongSwan, CN=red"
        rightid="C=CH O=strongSwan, CN=blue"

#text end

# sudo vim /etc/ipsec.secrets
# text bein
: RSA redkey.pem
#text end

# repeat the steps for the 1st server

sudo ipsec restart
sudo ipsec up red-to-blue


# check the status
sudo ipsec statusall

# check if the UDP port is reachable: port=500 or 4500
nmap <hostname or ip> -sU -pU:<UDP port>
# check if the UDP port is listening on the local. netstat and lsof work for this
sudo lsof -i -P -n|grep UDP

Other useful debug commands:
# Reload /etc/ipsec.conf, but not interrupt service
ipsec reload   
# more
ipsec start/stop/status


*** Behind NAT (AWS VPC) ***

1. when sign the server cert, it needs to use the public ip
2. sudo vim /etc/ipsec.conf
config setup
        charondebug="all"
        strictcrlpolicy=no
        uniqueids=yes
        cachecrls=no

conn red-to-blue
        authby=secret
        auto=route
        keyexchange=ikev2
        ike=aes256-sha256-modp1024!
        left=%any
	leftid=public ip
	leftsubnet=172.16.1.0/24
        right=public ip
        rightid=public ip
	rightsubnet=172.16.1.0/24
        type=tunnel
        esp=aes256-sha256-modp1024!
        forceencaps=yes
	
Another Example:
config setup
        charondebug="all"
        strictcrlpolicy=no
        uniqueids=yes
        cachecrls=no

conn red-to-blue
        authby=secret
        auto=route
        keyexchange=ikev2
        ike=aes256-sha256-modp1024!
        left=%any
	leftid=3.137.55.102
	leftsubnet=10.10.0.0/16
        right=3.16.248.7
        rightid=3.16.248.7
	rightsubnet=172.16.0.0/16
        type=tunnel
        esp=aes256-sha256-modp1024!
        forceencaps=yes

  

