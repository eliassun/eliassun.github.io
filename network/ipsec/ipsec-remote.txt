# Set the variable
COUNTRY_CODE=US
ORGANISATION=elias
SERVER_NAME=something.com(or IP)
IP_ADDRESS=public_ip

# CA
cd ~
mkdir ipsec
cd ipsec

ipsec pki --gen --type rsa --size 4096 --outform der > strongswankey.der
sudo cp strongswankey.der /etc/ipsec.d/private/strongswankey.der 
sudo chmod 755 /etc/ipsec.d/private
sudo chmod 755 /etc/ipsec.d/private/strongswankey.der
ipsec pki --self --ca --lifetime 3650 --in /etc/ipsec.d/private/strongswankey.der --type rsa --dn "c=$COUNTRY_CODE, O=$ORGANISATION, CN=Root CA" --outform der > strongswancert.der
sudo cp strongswancert.der /etc/ipsec.d/cacerts/strongswancert.der
openssl x509 -inform DER -in /etc/ipsec.d/cacerts/strongswancert.der -out strongswancert.pem -outform PEM
sudo cp strongswancert.pem /etc/ipsec.d/cacerts/strongswancert.pem
ipsec pki --print --in /etc/ipsec.d/cacerts/strongswancert.pem
ipsec pki --print --in /etc/ipsec.d/cacerts/strongswancert.der


# Server cert
ipsec pki --gen --type rsa --size 4096 --outform der > vpn_server_key.der
sudo cp vpn_server_key.der /etc/ipsec.d/private/vpn_server_key.der
sudo chmod 755 /etc/ipsec.d/private/vpn_server_key.der

ipsec pki --pub --in /etc/ipsec.d/private/vpn_server_key.der --type rsa | ipsec pki --issue --lifetime 730 --cacert /etc/ipsec.d/cacerts/strongswancert.der --cakey /etc/ipsec.d/private/strongswankey.der --dn "C=$COUNTRY_CODE, O=$ORGANISATION, CN=$SERVER_NAME" --san=$SERVER_NAME --san $IP_ADDRESS  --san @$IP_ADDRESS --flag serverAuth --flag ikeIntermediate --outform der > vpn_server_cert.der

sudo cp vpn_server_cert.der /etc/ipsec.d/certs/vpn_server_cert.der
openssl x509 -inform DER -in /etc/ipsec.d/certs/vpn_server_cert.der -out vpn_server_cert.pem -outform PEM
sudo cp vpn_server_cert.pem /etc/ipsec.d/certs/vpn_server_cert.pem
ipsec pki --print --in  /etc/ipsec.d/certs/vpn_server_cert.der
ipsec pki --print --in  /etc/ipsec.d/certs/vpn_server_cert.pem

#client cert
NAME=Elias
USERNAME=elias
USERID=elias@anymail.com
COUNTRY_CODE=US
ORGANISATION=elias

ipsec pki --gen --type rsa --size 2048 --outform der > $USERNAME.key.der
sudo cp $USERNAME.key.der /etc/ipsec.d/private/$USERNAME.key.der
ipsec pki --pub --in /etc/ipsec.d/private/$USERNAME.key.der --type rsa | ipsec pki --issue --lifetime 730 --cacert /etc/ipsec.d/cacerts/strongswancert.der --cakey  /etc/ipsec.d/private/strongswankey.der  --dn "C=$COUNTRY_CODE, O=$ORGANISATION, CN=$USERID" --san "$USERID" --outform der > $USERNAME.cert.der
sudo cp $USERNAME.cert.der /etc/ipsec.d/certs/$USERNAME.cert.der


openssl rsa -inform DER -in /etc/ipsec.d/private/$USERNAME.key.der -out $USERNAME.key.pem -outform PEM
sudo cp $USERNAME.key.pem /etc/ipsec.d/private/$USERNAME.key.pem
openssl x509 -inform DER -in /etc/ipsec.d/certs/$USERNAME.cert.der -out $USERNAME.cert.pem -outform PEM
sudo cp $USERNAME.cert.pem  /etc/ipsec.d/certs/$USERNAME.cert.pem 
sudo chmod 755 /etc/ipsec.d/private/elias.key.pem
sudo chmod 755 /etc/ipsec.d/private/elias.key.der
openssl pkcs12 -export -inkey /etc/ipsec.d/private/$USERNAME.key.pem -in /etc/ipsec.d/certs/$USERNAME.cert.pem  -name "$NAME.VPN.Cert" -certfile /etc/ipsec.d/cacerts/strongswancert.pem -caname "$ORGANISATION Root CA" -out $USERNAME.p12
sudo cp $USERNAME.p12 /etc/ipsec.d/certs/$USERNAME.p12

# Some other ways(optional)
# begin
# Copy all pem to MacOS, then make p12 or:
openssl pkcs12 -export -out Cert.p12 -in cert.pem -inkey key.pem -passin pass:root -passout pass:root
openssl pkcs12 -export -out $USERNAME.p12  -inkey /etc/ipsec.d/private/$USERNAME.key.pem -in /etc/ipsec.d/certs/$USERNAME.cert.pem -certfile /etc/ipsec.d/cacerts/strongswancert.pem
openssl pkcs12 -export -out $USERNAME.p12  -inkey /etc/ipsec.d/private/$USERNAME.key.pem -in /etc/ipsec.d/certs/$USERNAME.cert.pem -certfile /etc/ipsec.d/cacerts/strongswancert.pem -passin pass:123 -passout pass:321
openssl pkcs12 -export -out $USERNAME.p12  -inkey /etc/ipsec.d/private/$USERNAME.key.pem -in /etc/ipsec.d/certs/$USERNAME.cert.pem -certfile /etc/ipsec.d/cacerts/strongswancert.pem -passout pass: -nokeys
openssl pkcs12 -export -out $USERNAME.p12 -inkey /etc/ipsec.d/private/$USERNAME.key.pem -in /etc/ipsec.d/certs/$USERNAME.cert.pem -passout pass: -nokeys
#end


#MacOS
#****** Auth by cert ********
#Import strongswancert.pem to MacOS, always trust
#Import $USERNAME.p12 (e.g. elias.p12) 
#From GUI, Network-->VPN-->Add-->IKEv2:
#Server address = same as "IP_ADDRESS=public_ip" or Server name(domain name) above
#Remote ID = Same as Server address, or same as the leftid
#Local ID = cn for the client cert, e.g. elias@anymail.com
#Authentication
#Type=None(or Certification for early MacOS)
#Select=Certificate
#Certificate=the p12 imported

#ipsec.conf example:
config setup
        charondebug="all"
        strictcrlpolicy=no
        uniqueids=yes
        cachecrls=no

conn red-to-blue
        authby=secret
        auto=route
        keyexchange=ikev2
        ike=aes256-sha256-modp1024!
        left=%any
	leftid=3.141.72.6
	leftsubnet=172.16.0.0/16
        right=3.13.223.193
        rightid=3.13.223.193
	rightsubnet=10.10.0.0/16
        type=tunnel
        esp=aes256-sha256-modp1024!
        forceencaps=yes

conn remotevpn
    keyexchange=ikev2
    ike=aes128-sha1-modp1024,aes128-sha1-modp1536,aes128-sha1-modp2048,aes128-sha256-ecp256,aes128-sha256-modp1024,aes128-sha256-modp1536,aes128-sha256-modp2048,aes256-aes128-sha256-sha1-modp2048-modp4096-modp1024,aes256-sha1-modp1024,aes256-sha256-modp1024,aes256-sha256-modp1536,aes256-sha256-modp2048,aes256-sha256-modp4096,aes256-sha384-ecp384,aes256-sha384-modp1024,aes256-sha384-modp1536,aes256-sha384-modp2048,aes256-sha384-modp4096,aes256gcm16-aes256gcm12-aes128gcm16-aes128gcm12-sha256-sha1-modp2048-modp4096-modp1024,3des-sha1-modp1024!
    esp=aes128-aes256-sha1-sha256-modp2048-modp4096-modp1024,aes128-sha1,aes128-sha1-modp1024,aes128-sha1-modp1536,aes128-sha1-modp2048,aes128-sha256,aes128-sha256-ecp256,aes128-sha256-modp1024,aes128-sha256-modp1536,aes128-sha256-modp2048,aes128gcm12-aes128gcm16-aes256gcm12-aes256gcm16-modp2048-modp4096-modp1024,aes128gcm16,aes128gcm16-ecp256,aes256-sha1,aes256-sha256,aes256-sha256-modp1024,aes256-sha256-modp1536,aes256-sha256-modp2048,aes256-sha256-modp4096,aes256-sha384,aes256-sha384-ecp384,aes256-sha384-modp1024,aes256-sha384-modp1536,aes256-sha384-modp2048,aes256-sha384-modp4096,aes256gcm16,aes256gcm16-ecp384,3des-sha1!
    dpdaction=clear
    dpddelay=60s
    left=%any
    leftid=3.141.72.6
    leftsubnet=172.16.0.0/16
    leftcert=vpn_server_cert.pem
    leftsendcert=always
    right=%any
    rightsourceip=10.10.3.0/24
    rightdns=8.8.8.8
    eap_identity=%identity
    auto=add
    
# rightsourceip can be %dhcp, but it needs to set the strongSwan DHCP config.
#ipsec.secrets example:

: RSA vpn_server_key.der

# *** Auth by PSK ******
#/etc/ipsec.conf   
conn remotevpn
    keyexchange=ikev2
    ike=aes128-sha1-modp1024,aes128-sha1-modp1536,aes128-sha1-modp2048,aes128-sha256-ecp256,aes128-sha256-modp1024,aes128-sha256-modp1536,aes128-sha256-modp2048,aes256-aes128-sha256-sha1-modp2048-modp4096-modp1024,aes256-sha1-modp1024,aes256-sha256-modp1024,aes256-sha256-modp1536,aes256-sha256-modp2048,aes256-sha256-modp4096,aes256-sha384-ecp384,aes256-sha384-modp1024,aes256-sha384-modp1536,aes256-sha384-modp2048,aes256-sha384-modp4096,aes256gcm16-aes256gcm12-aes128gcm16-aes128gcm12-sha256-sha1-modp2048-modp4096-modp1024,3des-sha1-modp1024!
    esp=aes128-aes256-sha1-sha256-modp2048-modp4096-modp1024,aes128-sha1,aes128-sha1-modp1024,aes128-sha1-modp1536,aes128-sha1-modp2048,aes128-sha256,aes128-sha256-ecp256,aes128-sha256-modp1024,aes128-sha256-modp1536,aes128-sha256-modp2048,aes128gcm12-aes128gcm16-aes256gcm12-aes256gcm16-modp2048-modp4096-modp1024,aes128gcm16,aes128gcm16-ecp256,aes256-sha1,aes256-sha256,aes256-sha256-modp1024,aes256-sha256-modp1536,aes256-sha256-modp2048,aes256-sha256-modp4096,aes256-sha384,aes256-sha384-ecp384,aes256-sha384-modp1024,aes256-sha384-modp1536,aes256-sha384-modp2048,aes256-sha384-modp4096,aes256gcm16,aes256gcm16-ecp384,3des-sha1!
    dpdaction=clear
    dpddelay=60s
    authby=secret
    left=%any
    leftid=18.118.245.28
    leftsubnet=172.16.0.0/16
    right=%any
    rightsourceip=10.10.3.0/24
    rightdns=8.8.8.8
    auto=add
# subnet can support multiple ones by leftsubnet=172.31.0.0/16,172.33.0.0/16,172.35.0.0/16 . Restart the ipsec to make it work for next connection.
#/etc/ipsec.secrets 
elias : PSK "test123"
user2 : PSK "test123"
include /etc/ipsec.d/secrets/*
# sudo ipsec secrets to reload the secrects without interrupting the existing vpn connection.
#cConfigure MacOS client: https://eliassun.github.io/ipsec-psk.png


# call script when a connection is up:
# configure https://wiki.strongswan.org/projects/strongswan/wiki/connsection
leftupdown=/home/ubuntu/updown.sh

# script updown.sh https://docs.strongswan.org/docs/5.9/plugins/updown.html
#!/usr/bin/env python3
import syslog
import os

my_id = os.getenv('PLUTO_MY_ID')
syslog.syslog(syslog.LOG_INFO, 'pluto_my_id: {}'.format(my_id))
peer_id = os.getenv('PLUTO_PEER_ID')
syslog.syslog(syslog.LOG_INFO, 'PLUTO_PEER_ID: {}'.format(peer_id))


